/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description AI Note-to-Contact API */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @default Hello World! */
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/extract/text": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Extract contact informations from text
         * @description Extract contact informations from text
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Text to extract contact informations from */
            requestBody?: {
                content: {
                    "application/json": {
                        text: string;
                    };
                };
            };
            responses: {
                /** @description Contact informations extracted from text */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string | null;
                            email: string | null;
                            company: string | null;
                            location: string | null;
                            phone: string | null;
                            job_title: string | null;
                            createdAt: number | null;
                            updatedAt: number | null;
                            custom_fields: {
                                id: string;
                                label: string;
                                value: string;
                                contact_id: string;
                                createdAt: number | null;
                                updatedAt: number | null;
                            }[];
                        }[];
                    };
                };
                /** @description Invalid input or extraction failed */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @default Invalid input or extraction failed */
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/contacts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all contacts
         * @description Retrieve all contacts from the database
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of contacts retrieved successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string | null;
                            email: string | null;
                            company: string | null;
                            location: string | null;
                            phone: string | null;
                            job_title: string | null;
                            createdAt: number | null;
                            updatedAt: number | null;
                            custom_fields: {
                                id: string;
                                label: string;
                                value: string;
                                contact_id: string;
                                createdAt: number | null;
                                updatedAt: number | null;
                            }[];
                        }[];
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @default Internal server error */
                            error: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create a new contact
         * @description Create a new contact in the database
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Contact data to create */
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string | null;
                        /** Format: email */
                        email?: string | null;
                        company?: string | null;
                        location?: string | null;
                        phone?: string | null;
                        job_title?: string | null;
                        custom_fields: {
                            label: string;
                            value: string;
                        }[];
                    };
                };
            };
            responses: {
                /** @description Contact created successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            name: string | null;
                            email: string | null;
                            company: string | null;
                            location: string | null;
                            phone: string | null;
                            job_title: string | null;
                            createdAt: number | null;
                            updatedAt: number | null;
                            custom_fields: {
                                id: string;
                                label: string;
                                value: string;
                                contact_id: string;
                                createdAt: number | null;
                                updatedAt: number | null;
                            }[];
                        };
                    };
                };
                /** @description Validation error or constraint violation */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            /** @example {
                             *       "issues": [
                             *         {
                             *           "code": "invalid_type",
                             *           "expected": "array",
                             *           "received": "undefined",
                             *           "path": [
                             *             "custom_fields"
                             *           ],
                             *           "message": "Required"
                             *         }
                             *       ],
                             *       "name": "ZodError"
                             *     } */
                            error: {
                                issues: {
                                    code: string;
                                    path: (string | number)[];
                                    message?: string;
                                }[];
                                name: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @default Internal server error */
                            error: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/contacts/:id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update an existing contact
         * @description Update an existing contact in the database
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description The ID of the contact to update */
                    id: string;
                };
                cookie?: never;
            };
            /** @description Contact data to update */
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string | null;
                        /** Format: email */
                        email?: string | null;
                        company?: string | null;
                        location?: string | null;
                        phone?: string | null;
                        job_title?: string | null;
                        custom_fields?: {
                            label: string;
                            value: string;
                        }[];
                    };
                };
            };
            responses: {
                /** @description Contact updated successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @default Contact updated successfully! */
                            msg: string;
                        };
                    };
                };
                /** @description Validation error or constraint violation */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            error: {
                                issues: {
                                    code: string;
                                    path: (string | number)[];
                                    message?: string;
                                }[];
                                name: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @default Internal server error */
                            error: string;
                        };
                    };
                };
            };
        };
        post?: never;
        /**
         * Delete a contact
         * @description Delete a contact from the database
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description The ID of the contact to delete */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Contact deleted successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @default Contact deleted successfully */
                            msg: string;
                        };
                    };
                };
                /** @description Invalid contact ID */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            /** @example {
                             *       "issues": [
                             *         {
                             *           "code": "invalid_type",
                             *           "expected": "string",
                             *           "received": "undefined",
                             *           "path": [
                             *             "id"
                             *           ],
                             *           "message": "Required"
                             *         }
                             *       ],
                             *       "name": "ZodError"
                             *     } */
                            error: {
                                issues: {
                                    code: string;
                                    path: (string | number)[];
                                    message?: string;
                                }[];
                                name: string;
                            };
                        };
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @default Internal server error */
                            error: string;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
